{"ast":null,"code":"var _jsxFileName = \"/Users/seokseok/Desktop/Project/Genesis/Front/Frontend_dev/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const handleSearch = () => {\n    // 검색 로직을 구현하여 searchResults를 업데이트합니다.\n    // 예를 들어, 검색 대상 데이터가 배열인 경우\n    const filteredResults = searchData.filter((item //searchData로 prop 전달\n    ) => item.toLowerCase().includes(searchQuery.toLowerCase()));\n    setSearchResults(filteredResults);\n  };\n  const searchData = [\"Apple\", \"Banana\", \"Orange\", \"Mango\"\n  // 추가 검색 대상 데이터\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      className: \"w-[314px] h-[24px] mt-[380px] text-[16px] font-bold text-black bg-green-300 border-b-[0.5px] border-black\",\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"\\uD83D\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"6LwLJCqp9GeQ1AUUIpNBVCE9WXc=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","handleSearch","filteredResults","searchData","filter","item","toLowerCase","includes","children","type","value","className","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","index","_c","$RefreshReg$"],"sources":["/Users/seokseok/Desktop/Project/Genesis/Front/Frontend_dev/src/components/Search.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Search() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = () => {\n    // 검색 로직을 구현하여 searchResults를 업데이트합니다.\n    // 예를 들어, 검색 대상 데이터가 배열인 경우\n    const filteredResults = searchData.filter(\n      (\n        item //searchData로 prop 전달\n      ) => item.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setSearchResults(filteredResults);\n  };\n\n  const searchData = [\n    \"Apple\",\n    \"Banana\",\n    \"Orange\",\n    \"Mango\",\n    // 추가 검색 대상 데이터\n  ];\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        className=\"w-[314px] h-[24px] mt-[380px] text-[16px] font-bold text-black bg-green-300 border-b-[0.5px] border-black\"\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      <button onClick={handleSearch}>🔍</button>\n      <ul>\n        {searchResults.map((result, index) => (\n          <li key={index}>{result}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,MAAMC,eAAe,GAAGC,UAAU,CAACC,MAAM,CACvC,CACEC,IAAI,CAAC;IAAA,KACFA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACS,WAAW,CAAC,CAAC,CAC5D,CAAC;IACDN,gBAAgB,CAACE,eAAe,CAAC;EACnC,CAAC;EAED,MAAMC,UAAU,GAAG,CACjB,OAAO,EACP,QAAQ,EACR,QAAQ,EACR;EACA;EAAA,CACD;;EAED,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEb,WAAY;MACnBc,SAAS,EAAC,2GAA2G;MACrHC,QAAQ,EAAGC,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFxB,OAAA;MAAQyB,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CxB,OAAA;MAAAc,QAAA,EACGT,aAAa,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/B5B,OAAA;QAAAc,QAAA,EAAiBa;MAAM,GAAdC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CAvCQD,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAyCf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}